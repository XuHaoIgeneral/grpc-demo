// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定义客户端要发送的数据格式
type Request struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// 定义服务端返回的数据格式
type Response struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "auth.Request")
	proto.RegisterType((*Response)(nil), "auth.Response")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2c, 0x2d, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x1c, 0xb9, 0xd8, 0x83, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0x4a, 0x8b, 0x53, 0x8b, 0xf2, 0x12, 0x73,
	0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x90, 0x5c, 0x41, 0x62, 0x71, 0x71,
	0x79, 0x7e, 0x51, 0x8a, 0x04, 0x13, 0x44, 0x0e, 0xc6, 0x57, 0x52, 0xe2, 0xe2, 0x08, 0x4a, 0x2d,
	0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12, 0xe3, 0x62, 0x2b, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x81,
	0x9a, 0x00, 0xe5, 0x19, 0x59, 0x70, 0xb1, 0x38, 0x86, 0x86, 0x78, 0x08, 0x19, 0x70, 0x71, 0x3a,
	0x96, 0x96, 0x64, 0xf8, 0xe4, 0xa7, 0x67, 0xe6, 0x09, 0xf1, 0xea, 0x81, 0x9d, 0x03, 0xb5, 0x5f,
	0x8a, 0x0f, 0xc6, 0x85, 0x98, 0xa5, 0xc4, 0xa0, 0xc1, 0x68, 0xc0, 0xe8, 0xc4, 0x15, 0xc5, 0x01,
	0x76, 0x6f, 0x52, 0x69, 0x5a, 0x12, 0x1b, 0x98, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb8,
	0x2e, 0x35, 0x34, 0xc7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AUTHClient is the client API for AUTH service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AUTHClient interface {
	AuthLogin(ctx context.Context, opts ...grpc.CallOption) (AUTH_AuthLoginClient, error)
}

type aUTHClient struct {
	cc *grpc.ClientConn
}

func NewAUTHClient(cc *grpc.ClientConn) AUTHClient {
	return &aUTHClient{cc}
}

func (c *aUTHClient) AuthLogin(ctx context.Context, opts ...grpc.CallOption) (AUTH_AuthLoginClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AUTH_serviceDesc.Streams[0], "/auth.AUTH/AuthLogin", opts...)
	if err != nil {
		return nil, err
	}
	x := &aUTHAuthLoginClient{stream}
	return x, nil
}

type AUTH_AuthLoginClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type aUTHAuthLoginClient struct {
	grpc.ClientStream
}

func (x *aUTHAuthLoginClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aUTHAuthLoginClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AUTHServer is the server API for AUTH service.
type AUTHServer interface {
	AuthLogin(AUTH_AuthLoginServer) error
}

// UnimplementedAUTHServer can be embedded to have forward compatible implementations.
type UnimplementedAUTHServer struct {
}

func (*UnimplementedAUTHServer) AuthLogin(srv AUTH_AuthLoginServer) error {
	return status.Errorf(codes.Unimplemented, "method AuthLogin not implemented")
}

func RegisterAUTHServer(s *grpc.Server, srv AUTHServer) {
	s.RegisterService(&_AUTH_serviceDesc, srv)
}

func _AUTH_AuthLogin_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AUTHServer).AuthLogin(&aUTHAuthLoginServer{stream})
}

type AUTH_AuthLoginServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type aUTHAuthLoginServer struct {
	grpc.ServerStream
}

func (x *aUTHAuthLoginServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aUTHAuthLoginServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AUTH_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AUTH",
	HandlerType: (*AUTHServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AuthLogin",
			Handler:       _AUTH_AuthLogin_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "auth.proto",
}
